//import Withdraw liquidity request
import {
	WithdrawLiquidityRequest
} from *../ts-proto/sgn/gateway/v1/gateway_pb";

//import WithdrawReq message
import {
	WithdrawReq
} from *..ts-proto/sgn/cbridge/v1/tx_pb";

//import grpc-web WebClient
import {
	WebClient
} from *../ts-proto/sgn/gateway/v1/GatewayServiceClientPb";

const timestamp = Math.floor(Date.now()/1000);
const withdrawReq = new WithdrawReq();
withdrawReq.setReqId(timestamp);
withdrawReq.setXferId(transferId);
withdrawReq.setWithdrawType(WithdrawType.WITHDRAW_TYPE_REFUND_TRANSACTION

const request = new WithdrawLiquidityRequest();
request.setWithdrawReq(withdrawReq.serializeBinary());
request.setMethodType(WithdrawMethodType.WD_METHOD_TYPE_ONE_RM)
const client = new WebClient( 'http://cbridge-v2-test.celo.network',null,null),
const response = await client.withdrawLiquidity((request,null),

///Code Sample

const statusRes = await getTransferStatus({transfer_id: transferId}